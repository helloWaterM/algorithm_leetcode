给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。
有效字符串需满足：
左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。
示例 1:
输入: "()"
输出: true
示例 2:
输入: "()[]{}"
输出: true
示例 3:
输入: "(]"
输出: false
示例 4:
输入: "([)]"
输出: false
示例 5:
输入: "{[]}"
输出: true

class Solution {
public:
    bool isValid(string s) {
        if(s.size() == 0) return true;
        stack<char> sk;
        sk.push(s[0]);
        for(int i = 1; i < s.size(); i++){
            if(sk.empty()){
                sk.push(s[i]); continue;
            }
            if( this->rule(sk.top(), s[i]) ) {
                cout << sk.top() <<" "<<s[i] <<endl;
                sk.pop();
            }
            else{
                sk.push(s[i]);
            }
        }
        if(sk.size() == 0 )return true;
        else  return false;
    }
    bool rule(char a, char b){
        if(a == '(' && b == ')') return true;
        else if( a == '[' && b == ']') return true;
        else if( a == '{' && b == '}') return true;
        else  return false;
    }
};
