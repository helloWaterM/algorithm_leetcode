给定一个正整数 num，编写一个函数，如果 num 是一个完全平方数，则返回 True，否则返回 False。
说明：不要使用任何内置的库函数，如  sqrt。
示例 1：
输入：16
输出：True
示例 2：
输入：14
输出：False

方法一

class Solution {
public:
    bool isPerfectSquare(int num) {
        if(num < 0) return false;
        if(num == 0) return true;
        int i = 1;
        for(; i <= 1 << 16; i+= 100){
            if(num / i < i){ 
                cout <<i<<endl;
                break;
            }
        }
        for(int j = i - 100; j < i; j++){
            if(j * j == num){
                return true;
            }
        }
        return false;
    }
};

方法二 (二分法)
注意： 整数相除，结果为缩水的整数
class Solution {
public:
    bool isPerfectSquare(int num) {
        if(num < 0) return false;
        int left = 0;
        int right = num;
        
        while(right >= left){
            long long mid = (left + right) / 2;
            cout <<left<<" " << right <<endl;
            if(mid * mid == num) {return true;}
            else if(mid * mid < num) {left = mid + 1;}
            else{
                right = mid -1;
            }
        }
        return false;
    }
};
   
