1. Two Sum
题目描述提示帮助提交记录社区讨论阅读解答
随机一题
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

/*
  使用map 或者hash_map(leetcode貌似c++不能用)解决
  对已经遍历过的数字，用map保存
  然后新的数字，判断前面遍历过的数字是否可以用
    可以用，那么就匹配成功
    不可以用，加入map中，继续遍历
*/

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        map<int, int> intHash;        
        
        for(int i = 0; i < nums.size(); i++){
            int needNum = target - nums[i]; 
            if(intHash.find(needNum) != intHash.end()){
                vector<int> ans;
                ans.push_back(intHash[needNum]);ans.push_back(i);
                return ans;
            }
            intHash[nums[i]] = i;
        }
    }
};
