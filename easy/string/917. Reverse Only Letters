Given a string S, return the "reversed" string where all characters that are not a letter stay in the same place, and all letters reverse their positions.

 

Example 1:

Input: "ab-cd"
Output: "dc-ba"
Example 2:

Input: "a-bC-dEf-ghIj"
Output: "j-Ih-gfE-dCba"
Example 3:

Input: "Test1ng-Leet=code-Q!"
Output: "Qedo1ct-eeLg=ntse-T!"
 

Note:

S.length <= 100
33 <= S[i].ASCIIcode <= 122 
S doesn't contain \ or "



class Solution {
public:
    string reverseOnlyLetters(string S) {
        int len = S.size();
        string st ;
        for(int i = 0; i < len; i++){
            if(!isAl(S[i]))
                st += S[i];
            else
                st += 'a';
        }
        int j = 0;
        for(int i = len - 1; i >= 0; i--){
            if(!isAl(S[i])) continue;
            while(!(isAl(st[j]))){
                j++;
            }
            st[j] = S[i];
            j++;
        }
        return st;
    }
    bool isAl(char c){
        if(c<='Z' && c >= 'A' || c <='z' && c>='a'){
            return true;
        }
        else return false;
    }
};
