给定两个由小写字母构成的字符串 A 和 B ，只要我们可以通过交换 A 中的两个字母得到与 B 相等的结果，就返回 true ；否则返回 false 。

 

示例 1：

输入： A = "ab", B = "ba"
输出： true
示例 2：

输入： A = "ab", B = "ab"
输出： false
示例 3:

输入： A = "aa", B = "aa"
输出： true
示例 4：

输入： A = "aaaaaaabc", B = "aaaaaaacb"
输出： true
示例 5：

输入： A = "", B = "aa"
输出： false
 

提示：

0 <= A.length <= 20000
0 <= B.length <= 20000
A 和 B 仅由小写字母构成。




class Solution {
private:
    list<char> LA;
    list<char> LB;
    unordered_map<char, int> M;
public:
    bool buddyStrings(string A, string B) {
        int lenA = A.size(); int lenB = B.size();
        if( lenA != lenB || lenA < 2) return false;
        bool hasDouble = false;
        for(int i = 0; i < lenA; i++){
            if(M.find(A[i]) != M.end()){hasDouble = true;} 
            M[A[i]] ++;
            if(A[i] != B[i]){
                LA.push_front(A[i]);
                LB.push_back(B[i]);
            }
        }
        if(LA.size() != LB.size()) return false;
        if(LA.size() == 0){
            if(hasDouble == true) return true;
            else return false;
        }
        if(LA.size() ==2){
            for(int i = 0; i < 2; i++){
                if(LA.front() != LB.front())
                    return false;
                else {
                    LA.pop_front(); LB.pop_front();
                }
            }
            return true;
        }
        return false;
    }
};
