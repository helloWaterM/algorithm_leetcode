给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。



示例:

输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
说明:
尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。

/*
  dfs 暴力枚举
  另外 (auto x: string) 可以帮忙遍历字符串
*/

class Solution {
private:    
string str[9] = {"", "abc", "def", "ghi", "jkl","mno","pqrs","tuv","wxyz"};    
vector<string> ans;
public:
    vector<string> letterCombinations(string digits) {
        dfs(0, digits, "");
        return ans;
    }
    void dfs(int index, string digits, string res){
        if(index == digits.size()) {if(res != "")ans.push_back(res); return;}
        int numIndex = digits[index] - '0' - 1;
        string hpString = str[numIndex]; //例如abc
        for(auto x: hpString){
            cout << x << endl;
            res.push_back(x);
            dfs(index + 1, digits, res);
            res.pop_back();
        }
    }
};
